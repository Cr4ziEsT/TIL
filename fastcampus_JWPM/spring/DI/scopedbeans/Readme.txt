1. XML에 대하여...
    XML
    : 확장 가능한 마크업 언어
    : XML문서는 데이터를 표현한다. 문법이 틀리면 안된다.
    : XML은 데이터이기 때문에 태그명을 작성자가 마음대로 만들 수 있다.(HTML은 태그명이 정해져 있다.)

    Root Element(요소)?
    : 루트 요소는 반드시 1개의 요소는 있어야 하고, 하나의 요소로 둘러쌓여 있어야 한다.

    Element?
    : 시작tag + 내용 + 종료tag
    : 내용, 종료태그가 없을 경우 />로 끝날 수 있다.

    ex) 전자제품 쇼핑몰에서 여러 회사에게 납품할 상품목록을 xml데이터로 요청하였다.
    : 회사마다 다른 형태의 xml 문서를 보낼 수 있다.

    ex) 정해진 양식대로 xml 데이터를 요청한다면?
        - XML 스키마 (굉장히 디테일한 구조를 정의할 수 있다.)
        - DTD (예전에 사용함)

    XML 스미마도 xml 문법으로 작성한다. 해당 스키마를 읽을 수 있어야, 그 구조에 맞도록 작성할 수 있다.

    Spring은 여러개의 모듈 프로젝트로 구성되어 있다.
    예를 들면
    - Core 모듈
    Spring context

    - JDBC 프로그래밍 모듈
    Spring JDBC, Spring Data JPA

    - WEB 모듈
    Spring MVC...
    각각의 모듈별로 설정하는 방법이 있다, 각각의 모듈마다 제공하는 스키마가 다를 수 있다.

    ex) xml 문서는 데이터다. 여러개의 서로 다른 xml 문서를 통합할 수도 있다.
    만약 회원이라는 요소가 있고 이 요소는 name 이라는 요소를 가지고 있다.
    상품이라는 요소가 있고 이 요소는 name이라는 요소를 가지고 있다.
    자바에서는 동일한 이름의 class를 패키지가 다르게 하여 여러개를 가질 수 있다.
    xml 문서에는 xml name space를 이용하여 구분지을 수 있다.


    <네임스페이스명:태그명>

    xmlns="http://www.springframework.org/schema/beans"
    위의 코드는 네임스페이스를 정의한다. 보통은 다음과 같이 정의한다. xmlns뒤에 아무값도 없으면 기본 네임스페이스라고 한다.
    URI값은 실제로 존재하지 않는 경로일 수 있다. 보통 domain명뒤에 path값이 온다.
    spring xml 설정 (검색)

    xmlns:beans="http://www.springframework.org/schema/beans"


    XML파일을 읽어들이는 것을 XML Parser라고 한다. 파서는 스키마에 맞게 작성되었는지 검사도 한다.
    검사하여 맞게 작성된 문서를 Valid XML문서라고 한다.

    ----------------------------------

    xml스키마가 무엇인지, 왜 필요한지...

    xml name space가 무엇이며 왜 필요한가
    xml name space는 xml 요소 간의 이름에 대한 충돌을 방지해주는 방법을 제공하는 것
                    요소의 이름과 속성의 이름을 하나의 그룹으로 묶어 이름에 대한 충돌을 해결
                    URI로 식별한다.
    왜 필요한가?
    XML에서는 사용자가 XML 요소의 이름을 직접 정의합니다.(왜?  XML은 데이터이기 때문에 작성자 마음대로 작성할 수 있다.)
    따라서 서로 다른 XML 문서를 통합하려고 할 때 같은 이름을 가진 요소로 인해 충돌이 발생할 수 있다. 이를 방지하기 위해 name space가 필요